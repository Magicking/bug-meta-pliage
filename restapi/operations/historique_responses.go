// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/Magicking/dao_tracabilite/models"
)

// HistoriqueOKCode is the HTTP code returned for type HistoriqueOK
const HistoriqueOKCode int = 200

/*HistoriqueOK Liste ordonn√©e des interactions

swagger:response historiqueOK
*/
type HistoriqueOK struct {

	/*
	  In: Body
	*/
	Payload []string `json:"body,omitempty"`
}

// NewHistoriqueOK creates HistoriqueOK with default headers values
func NewHistoriqueOK() *HistoriqueOK {
	return &HistoriqueOK{}
}

// WithPayload adds the payload to the historique o k response
func (o *HistoriqueOK) WithPayload(payload []string) *HistoriqueOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the historique o k response
func (o *HistoriqueOK) SetPayload(payload []string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *HistoriqueOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		payload = make([]string, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

/*HistoriqueDefault Unexpected error

swagger:response historiqueDefault
*/
type HistoriqueDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewHistoriqueDefault creates HistoriqueDefault with default headers values
func NewHistoriqueDefault(code int) *HistoriqueDefault {
	if code <= 0 {
		code = 500
	}

	return &HistoriqueDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the historique default response
func (o *HistoriqueDefault) WithStatusCode(code int) *HistoriqueDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the historique default response
func (o *HistoriqueDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the historique default response
func (o *HistoriqueDefault) WithPayload(payload *models.Error) *HistoriqueDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the historique default response
func (o *HistoriqueDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *HistoriqueDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
