// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/Magicking/dao_tracabilite/models"
)

// AssociationOKCode is the HTTP code returned for type AssociationOK
const AssociationOKCode int = 200

/*AssociationOK Indique si lassociation s'est réalisé

swagger:response associationOK
*/
type AssociationOK struct {

	/*
	  In: Body
	*/
	Payload bool `json:"body,omitempty"`
}

// NewAssociationOK creates AssociationOK with default headers values
func NewAssociationOK() *AssociationOK {
	return &AssociationOK{}
}

// WithPayload adds the payload to the association o k response
func (o *AssociationOK) WithPayload(payload bool) *AssociationOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the association o k response
func (o *AssociationOK) SetPayload(payload bool) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AssociationOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

/*AssociationDefault Unexpected error

swagger:response associationDefault
*/
type AssociationDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewAssociationDefault creates AssociationDefault with default headers values
func NewAssociationDefault(code int) *AssociationDefault {
	if code <= 0 {
		code = 500
	}

	return &AssociationDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the association default response
func (o *AssociationDefault) WithStatusCode(code int) *AssociationDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the association default response
func (o *AssociationDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the association default response
func (o *AssociationDefault) WithPayload(payload *models.Error) *AssociationDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the association default response
func (o *AssociationDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AssociationDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
