// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// HistoriqueHandlerFunc turns a function with the right signature into a historique handler
type HistoriqueHandlerFunc func(HistoriqueParams) middleware.Responder

// Handle executing the request and returning a response
func (fn HistoriqueHandlerFunc) Handle(params HistoriqueParams) middleware.Responder {
	return fn(params)
}

// HistoriqueHandler interface for that can handle valid historique params
type HistoriqueHandler interface {
	Handle(HistoriqueParams) middleware.Responder
}

// NewHistorique creates a new http.Handler for the historique operation
func NewHistorique(ctx *middleware.Context, handler HistoriqueHandler) *Historique {
	return &Historique{Context: ctx, Handler: handler}
}

/*Historique swagger:route GET /historique/{objetid} historique

Historiques metadata objet

Retournes les informations d'historique

*/
type Historique struct {
	Context *middleware.Context
	Handler HistoriqueHandler
}

func (o *Historique) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewHistoriqueParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
